{
	"info": {
		"_postman_id": "2d68b778-68d3-40b8-9290-e76b5b88dbd7",
		"name": "jsonplaceholder",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "13252260"
	},
	"item": [
		{
			"name": "posts cases",
			"item": [
				{
					"name": "data based",
					"item": [
						{
							"name": "posts -> unauthorized access",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Unauthorized Access\", function () {",
											"    pm.response.to.have.status(401);",
											"});",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"userId\": {{userId}},\n    \"id\": {{id}},\n    \"title\": {{title}},\n    \"body\": {{body}}\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/posts",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"posts"
									]
								}
							},
							"response": []
						},
						{
							"name": "posts -> Internal Server Error",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Internal Server Error\", function () {",
											"    pm.response.to.have.status(500);",
											"});",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"userId\": {{userId}},\n    \"id\": {{id}},\n    \"title\": {{title}},\n    \"body\": {{body}}\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/posts",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"posts"
									]
								}
							},
							"response": []
						},
						{
							"name": "posts -> successful",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Succesfull\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"userId\": {{userId}},\n    \"id\": {{id}},\n    \"title\": {{title}},\n    \"body\": {{body}}\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/posts",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"posts"
									]
								}
							},
							"response": []
						},
						{
							"name": "posts -> invalid payloads",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Invalid Payloads\", function () {",
											"    pm.response.to.have.status(400);",
											"});",
											"",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"userId\": {{userId}},\n    \"id\": {{id}},\n    \"title\": {{title}},\n    \"body\": {{body}}\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/posts",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"posts"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "validation based",
					"item": [
						{
							"name": "posts -> valid values",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"user id should be numeric\", function () {",
											"    pm.response.to.have.status(400);",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"userId\": \"3\",\n    \"id\": 92,\n    \"title\": \"ratione ex tenetur perferendis\",\n    \"body\": \"aut et excepturi dicta laudantium sint rerum nihil\\nlaudantium et at\\na neque minima officia et similique libero et\\ncommodi voluptate qui\"\n  }",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/posts",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"posts"
									]
								}
							},
							"response": []
						},
						{
							"name": "posts -> invalid userId",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"user id should be numeric\", function () {",
											"    pm.response.to.have.status(400);",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"userId\": \"aababdbakkjdskds\",\n    \"id\": 92,\n    \"title\": \"ratione ex tenetur perferendis\",\n    \"body\": \"aut et excepturi dicta laudantium sint rerum nihil\\nlaudantium et at\\na neque minima officia et similique libero et\\ncommodi voluptate qui\"\n  }",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/posts",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"posts"
									]
								}
							},
							"response": []
						},
						{
							"name": "posts -> invalid id",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"id should be numeric\", function () {",
											"    pm.response.to.have.status(400);",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"userId\": 10,\n    \"id\": \"*ilo*\",\n    \"title\": \"ratione ex tenetur perferendis\",\n    \"body\": \"aut et excepturi dicta laudantium sint rerum nihil\\nlaudantium et at\\na neque minima officia et similique libero et\\ncommodi voluptate qui\"\n  }",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/posts",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"posts"
									]
								}
							},
							"response": []
						},
						{
							"name": "posts -> invalid title",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Title length cannot exceed 30 characters.\", function () {",
											"    pm.response.to.have.status(400);",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"userId\": 10,\n    \"id\": 92,\n    \"title\": \"11111111111111111111111111111111111111\",\n    \"body\": \"aut et excepturi dicta laudantium sint rerum nihil\\nlaudantium et at\\na neque minima officia et similique libero et\\ncommodi voluptate qui\"\n  }",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/posts",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"posts"
									]
								}
							},
							"response": []
						},
						{
							"name": "posts -> invalid body",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Body length cannot exceed 100 characters.\", function () {",
											"    pm.response.to.have.status(400);",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"userId\": 10,\n    \"id\": 92,\n    \"title\": \"ratione ex tenetur perferendis\",\n    \"body\": \"aut et excepturi dicta laudantium sint rerum nihil\\nlaudantium et at\\na neque minima officia et similique libero et\\ncommodi voluptate qui\"\n  }",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/posts",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"posts"
									]
								}
							},
							"response": []
						}
					]
				}
			]
		},
		{
			"name": "comments cases",
			"item": [
				{
					"name": "comments",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"userId\": 1,\n    \"id\": 1,\n    \"title\": \"sunt aut facere repellat provident occaecati excepturi optio reprehenderit\",\n    \"body\": \"quia et suscipit\\nsuscipit recusandae consequuntur expedita et cum\\nreprehenderit molestiae ut ut quas totam\\nnostrum rerum est autem sunt rem eveniet architecto\"\n  }",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/posts",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"posts"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "photos cases",
			"item": [
				{
					"name": "todos",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/todos",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"todos"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "todos cases",
			"item": [
				{
					"name": "todos",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"userId\": 1,\n    \"id\": 1,\n    \"title\": \"delectus aut autem\",\n    \"completed\": false\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/todos",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"todos"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "users cases",
			"item": [
				{
					"name": "users",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": " {\n    \"id\": 1,\n    \"name\": \"Leanne Graham\",\n    \"username\": \"Bret\",\n    \"email\": \"Sincere@april.biz\",\n    \"address\": {\n      \"street\": \"Kulas Light\",\n      \"suite\": \"Apt. 556\",\n      \"city\": \"Gwenborough\",\n      \"zipcode\": \"92998-3874\",\n      \"geo\": {\n        \"lat\": \"-37.3159\",\n        \"lng\": \"81.1496\"\n      }\n    },\n    \"phone\": \"1-770-736-8031 x56442\",\n    \"website\": \"hildegard.org\",\n    \"company\": {\n      \"name\": \"Romaguera-Crona\",\n      \"catchPhrase\": \"Multi-layered client-server neural-net\",\n      \"bs\": \"harness real-time e-markets\"\n    }\n  }",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/users",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"users"
							]
						}
					},
					"response": []
				}
			]
		}
	]
}